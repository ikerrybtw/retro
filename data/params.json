{
  "args_data": "gANjcmxsYWIubWlzYy5pbnN0cnVtZW50ClN0dWJNZXRob2RDYWxsCnEAKYFxAX1xAihYCAAAAF9fa3dhcmdzcQN9cQRYBgAAAF9fYXJnc3EFKGNybGxhYi5taXNjLmluc3RydW1lbnQKU3R1Yk9iamVjdApxBimBcQd9cQgoWAYAAABrd2FyZ3NxCX1xCihYCgAAAGJhdGNoX3NpemVxC0sUWAUAAABuX2l0cnEMS2RYCQAAAHN0ZXBfc2l6ZXENRz+EeuFHrhR7WAMAAABlbnZxDmgGKYFxD31xEChoCX1xEVgLAAAAd3JhcHBlZF9lbnZxEmgGKYFxE31xFChoCX1xFWgOaAYpgXEWfXEXKGgJfXEYKFgKAAAAcmVjb3JkX2xvZ3EZiVgMAAAAcmVjb3JkX3ZpZGVvcRqJWAgAAABlbnZfbmFtZXEbWBgAAABCaXBlZGFsV2Fsa2VySGFyZGNvcmUtdjJxHFgLAAAAZm9yY2VfcmVzZXRxHYh1WAsAAABwcm94eV9jbGFzc3EeY3JsbGFiLmVudnMuZ3ltX2VudgpHeW1FbnYKcR9YBAAAAGFyZ3NxICl1YnNoHmNybGxhYi5lbnZzLm5vcm1hbGl6ZWRfZW52Ck5vcm1hbGl6ZWRFbnYKcSFoICl1YnNoHmNzYW5kYm94LnJvY2t5LnRmLmVudnMuYmFzZQpUZkVudgpxImggKXViWAgAAAB1c2VfbWFtbHEjiFgIAAAAYmFzZWxpbmVxJGgGKYFxJX1xJihoCX1xJ1gIAAAAZW52X3NwZWNxKGNybGxhYi5taXNjLmluc3RydW1lbnQKU3R1YkF0dHIKcSkpgXEqfXErKFgKAAAAX2F0dHJfbmFtZXEsWAQAAABzcGVjcS1YBAAAAF9vYmpxLmgPdWJzaB5jcmxsYWIuYmFzZWxpbmVzLmxpbmVhcl9mZWF0dXJlX2Jhc2VsaW5lCkxpbmVhckZlYXR1cmVCYXNlbGluZQpxL2ggKXViWAYAAABwb2xpY3lxMGgGKYFxMX1xMihoCX1xMyhYDgAAAGdyYWRfc3RlcF9zaXplcTRHP7mZmZmZmZpYDAAAAGhpZGRlbl9zaXplc3E1S2RLZIZxNlgEAAAAbmFtZXE3aDBYEwAAAGhpZGRlbl9ub25saW5lYXJpdHlxOGN0ZW5zb3JmbG93LnB5dGhvbi5vcHMuZ2VuX25uX29wcwpyZWx1CnE5aChoKSmBcTp9cTsoaCxoLWguaA91YnVoHmNzYW5kYm94LnJvY2t5LnRmLnBvbGljaWVzLm1hbWxfbWluaW1hbF9nYXVzc19tbHBfcG9saWN5Ck1BTUxHYXVzc2lhbk1MUFBvbGljeQpxPGggKXViWA8AAABtYXhfcGF0aF9sZW5ndGhxPU30AVgEAAAAcGxvdHE+iVgPAAAAbWV0YV9iYXRjaF9zaXplcT9LKFgQAAAAbnVtX2dyYWRfdXBkYXRlc3FASwF1aB5jc2FuZGJveC5yb2NreS50Zi5hbGdvcy5tYW1sX3RycG8KTUFNTFRSUE8KcUFoICl1YlgFAAAAdHJhaW5xQil9cUN0cUR1Yi4=",
  "exp_name": "trpomaml1_fbs20_mbs40_flr_0.1metalr_0.01_step11",
  "json_args": {
    "algo": {
      "_name": "sandbox.rocky.tf.algos.maml_trpo.MAMLTRPO",
      "batch_size": 20,
      "max_path_length": 500,
      "meta_batch_size": 40,
      "n_itr": 100,
      "num_grad_updates": 1,
      "plot": false,
      "step_size": 0.01,
      "use_maml": true
    },
    "baseline": {
      "_name": "rllab.baselines.linear_feature_baseline.LinearFeatureBaseline",
      "env_spec": {
        "attr": "spec",
        "obj": {
          "_name": "sandbox.rocky.tf.envs.base.TfEnv",
          "wrapped_env": {
            "_name": "rllab.envs.normalized_env.NormalizedEnv",
            "env": {
              "_name": "rllab.envs.gym_env.GymEnv",
              "env_name": "BipedalWalkerHardcore-v2",
              "force_reset": true,
              "record_log": false,
              "record_video": false
            }
          }
        }
      }
    },
    "env": {
      "_name": "sandbox.rocky.tf.envs.base.TfEnv",
      "wrapped_env": {
        "_name": "rllab.envs.normalized_env.NormalizedEnv",
        "env": {
          "_name": "rllab.envs.gym_env.GymEnv",
          "env_name": "BipedalWalkerHardcore-v2",
          "force_reset": true,
          "record_log": false,
          "record_video": false
        }
      }
    },
    "policy": {
      "_name": "sandbox.rocky.tf.policies.maml_minimal_gauss_mlp_policy.MAMLGaussianMLPPolicy",
      "env_spec": {
        "attr": "spec",
        "obj": {
          "_name": "sandbox.rocky.tf.envs.base.TfEnv",
          "wrapped_env": {
            "_name": "rllab.envs.normalized_env.NormalizedEnv",
            "env": {
              "_name": "rllab.envs.gym_env.GymEnv",
              "env_name": "BipedalWalkerHardcore-v2",
              "force_reset": true,
              "record_log": false,
              "record_video": false
            }
          }
        }
      },
      "grad_step_size": 0.1,
      "hidden_nonlinearity": "tensorflow.python.ops.gen_nn_ops.relu",
      "hidden_sizes": [
        100,
        100
      ],
      "name": "policy"
    }
  },
  "log_dir": "./data/",
  "log_tabular_only": false,
  "n_parallel": 1,
  "params_log_file": "params.json",
  "plot": false,
  "resume_from": null,
  "seed": 1,
  "snapshot_gap": 1,
  "snapshot_mode": "last",
  "tabular_log_file": "progress.csv",
  "text_log_file": "debug.log",
  "use_cloudpickle": false,
  "variant_data": null,
  "variant_log_file": "variant.json"
}